server:
  port: 8080
app:
  name: sco-createpromo-adapter
spring:
  jackson:
    deserialization:
      fail-on-unknown-properties: false
mapping:
  hostname: ${SCO_URL}
  rubbles-post: ${POST_MAPPING}
  sco-post: ${SCO_POST}
db:
  sql:
    update-rb-promo-acrm-sco: UPDATE &rb_promo_acrm_sco SET SCO_UPLOAD_FLG = 1 WHERE PROMO_ID IN (:promo_id);
  tables:
    rb-promo-acrm-sco: ${RB_PROMO_ACRM_SCO_TABLE}
    rb-item-groups:  ${RB_ITEM_GROUPS_TABLE}
    rb-pos-groups:  ${RB_POS_GROUPS_TABLE}
    int-rb-item-list: ${STG_INT_RB_ITEM_LIST_TABLE}
    int-post-of-sales-rb: ${STG_INT_POINT_OF_SALES_RB_TABLE}
  seq:
    item-gr-id: ${RB_ITM_GR_ID_SEQUENCE}
    pos-gr-id: ${POS_GR_ID_SEQUENCE}
    int-item-id: ${INT_ITEM_ID_SEQUENCE}
    int-pos-id: ${INT_POS_ID_SEQUENCE}

  postgres:
    batch_size: ${BATCH_SIZE}
    batch_timeout_ms: ${BATCH_TIMEOUT_MS}
    cdm:
      url: ${POSTGRES_CDM_URL}
      username: ${POSTGRES_CDM_USERNAME}
      password: ${POSTGRES_CDM_PASSWORD}
      hikari:
        pool-name: postgres-pool-cdm
        minimum-idle: 0
        maximum-pool-size: 1
    int:
      url: ${POSTGRES_SCO_INT_URL}
      username: ${POSTGRES_SCO_INT_USERNAME}
      password: ${POSTGRES_SCO_INT_PASSWORD}
      hikari:
        pool-name: postgres-pool-int
        minimum-idle: 0
        maximum-pool-size: 1

sco:
  retry_count: ${RETRY_COUNT}
  retry_timeout_sec: ${RETRY_TIMEOUT_SEC}
  header: ${SCO_X_AUTH_KEY}
